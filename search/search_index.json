{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":true,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Metaclasses \u00b6 Understanding Python Classes Dynamic Class Creation More Accurate Dynamic Class Creation Metaclasses in Python Run Methods Order in Python Run Methods Order in Python with More Explanation Invisible Metaclasses in Python Meta Classes without type More Accurate Meta Classes without type Examples \u00b6 Register Classes in Python Singleton in Python Auto Slots Logging Namespace Modeling a Class with a Metaclass Define Method If Condition True Example on CPython >>> import enum >>> enum.Enum >>> import abc >>> abc.ABC >>> import typing >>> typing.Any Example on 3.party libs https://github.com/django/django/blob/main/django/db/models/base.py#L92 https://github.com/pydantic/pydantic/blob/main/pydantic/main.py#L47 Tutorial, Docs, Videos \u00b6 https://www.youtube.com/watch?v=yWzMiaqnpkI https://realpython.com/python-metaclasses/ https://www.python.org/doc/essays/metaclasses/ https://docs.python.org/3/reference/datamodel.html#customizing-class-creation https://peps.python.org/pep-3115/ https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python https://jfreeman.dev/blog/2020/12/07/python-metaclasses/ https://blog.ionelmc.ro/2015/02/09/understanding-python-metaclasses/ https://jfreeman.dev/blog/2020/12/07/python-metaclasses/ https://peps.python.org/pep-3115/ CPython Implementation \u00b6 https://github.com/python/cpython/blob/main/Python/bltinmodule.c#L89","title":"Overview"},{"location":"#metaclasses","text":"Understanding Python Classes Dynamic Class Creation More Accurate Dynamic Class Creation Metaclasses in Python Run Methods Order in Python Run Methods Order in Python with More Explanation Invisible Metaclasses in Python Meta Classes without type More Accurate Meta Classes without type","title":"Metaclasses"},{"location":"#examples","text":"Register Classes in Python Singleton in Python Auto Slots Logging Namespace Modeling a Class with a Metaclass Define Method If Condition True Example on CPython >>> import enum >>> enum.Enum >>> import abc >>> abc.ABC >>> import typing >>> typing.Any Example on 3.party libs https://github.com/django/django/blob/main/django/db/models/base.py#L92 https://github.com/pydantic/pydantic/blob/main/pydantic/main.py#L47","title":"Examples"},{"location":"#tutorial-docs-videos","text":"https://www.youtube.com/watch?v=yWzMiaqnpkI https://realpython.com/python-metaclasses/ https://www.python.org/doc/essays/metaclasses/ https://docs.python.org/3/reference/datamodel.html#customizing-class-creation https://peps.python.org/pep-3115/ https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python https://jfreeman.dev/blog/2020/12/07/python-metaclasses/ https://blog.ionelmc.ro/2015/02/09/understanding-python-metaclasses/ https://jfreeman.dev/blog/2020/12/07/python-metaclasses/ https://peps.python.org/pep-3115/","title":"Tutorial, Docs, Videos"},{"location":"#cpython-implementation","text":"https://github.com/python/cpython/blob/main/Python/bltinmodule.c#L89","title":"CPython Implementation"},{"location":"tutorial/dynamic-class-creation/","text":"Even if I create the Example class dynamically, the results will be the same as in my previous post. class Example : attr = 1 def method ( self ): return \"method\" name = \"Example\" bases = () namespace = { \"attr\" : 1 , \"method\" : lambda self : \"method\" } Example = type ( name , bases , namespace ) print ( f \" { Example . __class__ =} \" ) # <class 'type'> print ( f \" { Example () . attr =} \" ) # 1 print ( f \" { Example () . method () =} \" ) # 'method' assert isinstance ( Example , type ) assert isinstance ( Example (), Example )","title":"Dynamic class creation"},{"location":"tutorial/invisible-metaclasses-in-python/","text":"class K ( metaclass = type ): pass class Example ( K , metaclass = type ): pass class K : pass class Example ( K ): pass","title":"Invisible metaclasses in python"},{"location":"tutorial/meta-classes-without-type/","text":"class Meta : # this class is a normal class, Meta = instance of type, Only the Meta class does not contain the properties of the type. # noqa @classmethod def __prepare__ ( mcs , cls_name , bases ): # default, staticmethod prepare = dict () print ( f \"Meta.__prepare__( { mcs =} , { cls_name =} , { bases =} , { prepare =} )\" ) # Meta.__prepare__( # mcs=<class '__main__.Meta'>, # cls_name='K', # bases=(), # prepare={} # ) # Meta.__prepare__( # mcs=<class '__main__.Meta'>, # cls_name='Example', # bases=(<__main__.Meta object at 0x10b3bea60>,), # prepare={} # ) return prepare def __new__ ( cls , cls_name , bases , namespace , ** kwargs ): new = super () . __new__ ( cls ) print ( f \"Meta.__new__( { cls =} , { cls_name =} , { bases =} , { namespace =} , { kwargs =} , { new =} )\" ) # Meta.__new__( # mcs=<class '__main__.Meta'>, # cls_name=='K', # bases=(), # namespace={'__module__': '__main__', '__qualname__': 'K'}, # kwargs={}, # new=<class '__main__.Meta'> ( self ) # ) # Meta.__new__( # mcs=<class '__main__.Meta'>, # cls_name=='Example', # bases=(<__main__.Meta object at 0x10b3bea60>,), # namespace={'__module__': '__main__', '__qualname__': 'Example', '__new__': <function Example.__new__ at 0x10b3cab80>, '__init__': <function Example.__init__ at 0x10b3cac10>, '__call__': <function Example.__call__ at 0x10b3caca0>, '__classcell__': <cell at 0x10b3bea90: empty>}, # noqa # kwargs={}, # new=<class '__main__.Meta'> ( self ) # ) return new def __init__ ( self , cls_name , bases , namespace , ** kwargs ): init = super () . __init__ () print ( f \"Meta.__init__( { self =} , { cls_name =} , { bases =} , { namespace } , { kwargs =} , { init =} )\" ) # Meta.__init__( # cls=<class '__main__.Example'>, ( self ) # cls_name='K', # bases=(), # namespace={'__module__': '__main__', '__qualname__': 'K'}, # noqa # kwargs={}, # init=None ( int return None ) # ) # Meta.__init__( # cls=<class '__main__.Example'>, ( self ) # cls_name='Example', # bases=(<__main__.Meta object at 0x10b3bea60>,), # namespace={'__module__': '__main__', '__qualname__': 'Example', '__new__': <function Example.__new__ at 0x10b3cab80>, '__init__': <function Example.__init__ at 0x10b3cac10>, '__call__': <function Example.__call__ at 0x10b3caca0>, '__classcell__': <cell at 0x10b3bea90: empty>}, # noqa # kwargs={}, # init=None ( int return None ) # ) def __call__ ( self , * args , ** kwargs ): print ( f \"Meta.__call__( { self =} , { args =} , { kwargs =} )\" ) # Meta.__call__( # cls=<class '__main__.Meta'>, # args=(1, 2), # kwargs={'c': 3}, # call=<__main__.Example object at 0x10d4c3940> # ) # Meta.__call__( # cls=<class '__main__.Meta'>, # args=(1,), # kwargs={'k': 1}, # call=<__main__.Example object at 0x10d4c3940> # ) return self class K ( metaclass = Meta ): # In order to get inherit, it must be instanced of Meta. pass # Order: Meta.__prepare__, Meta.__new__, Meta.__init__ class Example ( K , metaclass = Meta ): # Order: Meta.__prepare__, Meta.__new__, Meta.__init__ pass base = Example ( 1 , 2 , c = 3 ) # Meta.__call__ base ( 1 , k = 1 ) # Meta.__call__","title":"Meta classes without type"},{"location":"tutorial/metaclasses-in-python/","text":"Let\u2019s add an intermediate layer to the class creation phase. class Meta ( type ): pass class Example ( metaclass = Meta ): attr = 1 def method ( self ): return \"method\" print ( f \" { Meta . __class__ =} \" ) # <class 'type'> print ( f \" { Example . __class__ =} \" ) # <class '__main__.Meta'> print ( f \" { Example () . __class__ =} \" ) # <class '__main__.Example'> print ( f \" { Example () . attr =} \" ) # 1 print ( f \" { Example () . method () =} \" ) # 'method' assert isinstance ( Meta , type ) assert isinstance ( Example , Meta ) assert isinstance ( Example (), Example )","title":"Metaclasses in python"},{"location":"tutorial/more-accurate-dynamic-class-creation/","text":"Another example of dynamic class creation import textwrap class Example : attr = 1 def method ( self ): return \"method\" name = \"Example\" bases = () namespace = type . __prepare__ ( name , bases ) # >>> {}, default is dict() # namespace[\"attr\"] = 1 # namespace[\"method\"] = lambda self: \"method\" body = textwrap . dedent ( \"\"\"\\ attr = 1 def method(self): return \"method\" \"\"\" ) exec ( body , globals (), namespace ) Example = type ( name , bases , namespace ) # type: ignore print ( f \" { Example . __class__ =} \" ) # <class 'type'> print ( f \" { Example () . attr =} \" ) # 1 print ( f \" { Example () . method () =} \" ) # 'method' assert isinstance ( Example , type ) assert isinstance ( Example (), Example )","title":"More accurate dynamic class creation"},{"location":"tutorial/more-accurate-meta-classes-without-type/","text":"class Meta : def __prepare__ ( name , bases , ** kwargs ): return dict () def __new__ ( cls , name , bases , namespace , ** kwargs ): obj = object . __new__ ( cls ) obj . __init__ ( name , bases , namespace , ** kwargs ) return obj def __init__ ( self , name , bases , namespace , ** kwargs ): self . name = name self . bases = bases self . namespace = namespace self . kwargs = kwargs self . __call_run = False def __call__ ( self , * args , ** kwargs ): if not self . __call_run : self . __call_run = True cls_new = self . namespace [ \"__new__\" ] cls_init = self . namespace [ \"__init__\" ] obj = cls_new ( self , * args , ** kwargs ) cls_init ( obj , * args , ** kwargs ) else : cls_call = self . namespace [ \"__call__\" ] obj = cls_call ( self , * args , ** kwargs ) return obj def __str__ ( self ): if not self . __call_run : return \"<Meta: {} >\" . format ( self . name ) else : return self . namespace [ \"__str__\" ]( self ) def __repr__ ( self ): return self . __str__ () def __getattribute__ ( self , name ): return object . __getattribute__ ( self , name ) def __setattr__ ( self , name , value ): object . __setattr__ ( self , name , value ) def __delattr__ ( self , name ): object . __delattr__ ( self , name ) def __getitem__ ( self , key ): return self . namespace [ key ] def __setitem__ ( self , key , value ): self . namespace [ key ] = value def __delitem__ ( self , key ): del self . namespace [ key ] def __len__ ( self ): return len ( self . namespace ) def __contains__ ( self , item ): return item in self . namespace def __iter__ ( self ): return iter ( self . namespace ) def __reversed__ ( self ): return reversed ( self . namespace ) class Klass ( metaclass = Meta ): def __new__ ( cls , * args , ** kwargs ): return cls def __init__ ( self , * args , ** kwargs ): pass def __call__ ( self , * args , ** kwargs ): return self def __str__ ( self ): return \"<Klass: {} >\" . format ( self . name ) klass = Klass ( 1 , a = 1 ) klass ( deneme = 3 ) print ( klass )","title":"More accurate meta classes without type"},{"location":"tutorial/run-methods-order-in-python-with-more-explanation/","text":"class Meta ( type ): @classmethod def __prepare__ ( mcs , cls_name , bases , ** kwargs ): # default, staticmethod prepare = super () . __prepare__ ( cls_name , bases ) print ( f \"Meta.__prepare__( { mcs =} , { cls_name =} , { bases =} , { prepare =} )\" ) # Meta.__prepare__( # mcs=<class '__main__.Meta'>, # cls_name='Example', # bases=(<class '__main__.Base'>,), # prepare={} # ) return prepare def __new__ ( mcs , cls_name , bases , namespace , ** kwargs ): new = super () . __new__ ( mcs , cls_name , bases , namespace ) print ( f \"Meta.__new__( { mcs =} , { cls_name =} , { bases =} , { namespace =} , { kwargs =} , { new =} )\" ) # Meta.__new__( # mcs=<class '__main__.Meta'>, # cls_name='Example', # bases=(<class '__main__.Base'>,), # namespace={'__module__': '__main__', '__qualname__': 'Example', '__new__': <function Example.__new__ at 0x109203c10>, '__init__': <function Example.__init__ at 0x109203ca0>}, # noqa # kwargs={}, # new=<class '__main__.Example'> ( self ) # ) return new def __init__ ( cls , cls_name , bases , namespace , ** kwargs ): init = super () . __init__ ( cls_name , bases , namespace , ** kwargs ) print ( f \"Meta.__init__( { cls =} , { cls_name =} , { bases =} , { namespace } , { kwargs =} , { init =} )\" ) # Meta.__init__( # cls=<class '__main__.Example'>, ( self ) # cls_name='Example', # bases=(<class '__main__.Base'>,), # namespace={'__module__': '__main__', '__qualname__': 'Example', '__new__': <function Example.__new__ at 0x109203c10>, '__init__': <function Example.__init__ at 0x109203ca0>}, # noqa # kwargs={}, # init=None ( int return None ) # ) def __call__ ( cls , * args , ** kwargs ): call = super () . __call__ ( * args , ** kwargs ) print ( f \"Meta.__call__( { cls =} , { args =} , { kwargs =} , { call =} )\" ) # Meta.__call__( # cls=<class '__main__.Example'>, # args=(1, 2), # kwargs={'c': 3}, # call=<__main__.Example object at 0x10d4c3940> # ) return call class Base : pass class Example ( Base , metaclass = Meta ): def __new__ ( cls , * args , ** kwargs ): new = super () . __new__ ( cls ) print ( f \"Example.__new__( { cls =} , { args =} , { kwargs =} , { new =} )\" ) # Example.__new__( # cls=<class '__main__.Example'>, # args=(1, 2) # kwargs={'c': 3}, # new=<__main__.Example object at 0x109226a90> # ) return new def __init__ ( self , a , b , c ): print ( f \"Example.__init__( { self =} , { a =} , { b =} , { c =} )\" ) # Example.__init__( # self=<__main__.Example object at 0x10dd9e940>, # a=1, # b=2, # c=3 # ) self . a = a self . b = b self . c = c def __call__ ( self , * args , ** kwargs ): print ( f \"Example.__call__( { self =} , { args =} , { kwargs =} )\" ) # Example.__call__( # self=<__main__.Example object at 0x10b2eea90>, # args=(1,), # kwargs={'k': 1} # ) base = Example ( 1 , 2 , c = 3 ) base ( 1 , k = 1 )","title":"Run methods order in python with more explanation"},{"location":"tutorial/run-methods-order-in-python/","text":"class Meta ( type ): @classmethod def __prepare__ ( mcs , cls_name , bases , ** kwargs ): # default, staticmethod print ( \"Meta.__prepare__\" ) return super () . __prepare__ ( cls_name , bases ) def __new__ ( mcs , cls_name , bases , namespace , ** kwargs ): print ( f \"Meta.__new__\" ) return super () . __new__ ( mcs , cls_name , bases , namespace ) def __init__ ( cls , cls_name , bases , namespace , ** kwargs ): print ( f \"Meta.__init__\" ) super () . __init__ ( cls_name , bases , namespace , ** kwargs ) def __call__ ( cls , * args , ** kwargs ): print ( f \"Meta.__call__\" ) return super () . __call__ ( * args , ** kwargs ) class Base : pass class Example ( Base , metaclass = Meta ): # Order: Meta.__prepare__, Meta.__new__, Meta.__init__ # def __prepare__(mcs, cls_name, bases): # it doesn't work, in this way def __new__ ( cls , * args , ** kwargs ): print ( f \"Example.__new__\" ) return super () . __new__ ( cls ) def __init__ ( self ): print ( f \"Example.__init__\" ) def __call__ ( self , * args , ** kwargs ): print ( f \"Example.__call__\" ) base = Example () # Meta.__call__, Example.__new__, Example.__init__ base () # Example.__call__","title":"Run methods order in python"},{"location":"tutorial/understanding-python-classes/","text":"Every object in python has a type, and type(obj) == obj. class class Example : attr = 1 def method ( self ): return \"method\" print ( f \" { type ( 44 ) =} \" ) # type(44)=<class 'int'> print ( f \" { type ( 'hello' ) =} \" ) # type('hello')=<class 'str'> print ( f \" { type (()) =} \" ) # type(())=<class 'tuple'> print ( f \" { type ([]) =} \" ) # type([])=<class 'list'> print ( f \" { Example . __class__ =} \" ) # <class 'type'> print ( f \" { type ( Example ) =} \" ) # <class 'type'> print ( f \" { type ( type ( type )) =} \" ) # <class 'type'> print ( f \" { Example () . __class__ =} \" ) # <class '__main__.Example'> assert isinstance ( Example , type ) assert isinstance ( Example (), Example )","title":"Understanding python classes"},{"location":"tutorial/examples/auto-slots/","text":"class Meta ( type ): def __new__ ( mcs , name , bases , namespace , ** kwargs ): __slots__ = namespace . get ( \"__slots__\" , ()) if not __slots__ : if __init__ := namespace . get ( \"__init__\" , None ): __slots__ = __init__ . __code__ . co_names namespace [ \"__slots__\" ] = __slots__ return super () . __new__ ( mcs , name , bases , namespace , ** kwargs ) class AutoSlots ( metaclass = Meta ): pass class Example ( AutoSlots ): def __init__ ( self , field : str , * , keyword_field : int ): self . field = field self . keyword_field = keyword_field self . constant = \"constant\" assert Example . __slots__ == ( \"field\" , \"keyword_field\" , \"constant\" ) assert Example ( \"field\" , keyword_field = 1 ) . __dict__ == {}","title":"Auto slots"},{"location":"tutorial/examples/define-method-if-condition-true/","text":"import inspect import typing __all__ = ( \"DefineMeta\" , \"Namespace\" ) FuncT = typing . Callable [[ typing . Any ], typing . Any ] # unexport: not-public class NotSet : # unexport: not-public ... class Namespace ( dict ): test : typing . List [ bool ] = [] # TODO: rename def __init__ ( self , * args , ** kwargs ): super () . __init__ ( * args , ** kwargs ) super () . __setitem__ ( \"define_if\" , self . define_if ) def __setitem__ ( self , key : str , value : typing . Any ): if inspect . isfunction ( value ): if self . test : if self . test . pop () is True : super () . __setitem__ ( key , value ) else : super () . __setitem__ ( key , value ) else : super () . __setitem__ ( key , value ) @classmethod def define_if ( cls , condition : bool ) -> typing . Callable [[ typing . Callable ], FuncT ]: def wrapper ( func : FuncT ) -> FuncT : cls . test . append ( condition ) return func return wrapper class DefineMeta ( type ): if typing . TYPE_CHECKING : @classmethod def define_if ( mcs , condition : bool ) -> typing . Callable [[ typing . Callable ], FuncT ]: ... @classmethod def __prepare__ ( mcs , name , bases , ** kwargs ) -> typing . Union [ \"Namespace\" , dict ]: # type: ignore[override] # noqa: E501 return Namespace () def __call__ ( cls , condition : typing . Union [ bool , typing . Type [ NotSet ], None ] = NotSet ): if condition is NotSet : return super () . __call__ () else : assert isinstance ( condition , bool ) return cls . define_if ( condition ) class Defineif ( metaclass = DefineMeta ): pass define_if = Defineif class Example ( metaclass = DefineMeta ): @define_if ( condition = True ) def foo ( self ): return True @define_if ( condition = False ) def foo ( self ): return False assert Example () . foo () is True","title":"Define method if condition true"},{"location":"tutorial/examples/logging-namespace/","text":"class LoggingDict ( dict ): def __setitem__ ( self , key , value ): print ( \"d[ %r ] = %r \" % ( key , value )) dict . __setitem__ ( self , key , value ) class Meta ( type ): @classmethod def __prepare__ ( mcs , name , bases ): return LoggingDict () class C ( metaclass = Meta ): foo = 2 + 2 foo = 42 bar = 123 def __int__ ( self ): pass","title":"Logging namespace"},{"location":"tutorial/examples/modeling-a-class-with-a-metaclass/","text":"class Meta ( type ): def __new__ ( mcs , name , bases , namespace , ** kwargs ): if not [ base for base in bases if isinstance ( base , mcs )]: return super () . __new__ ( mcs , name , bases , namespace , ** kwargs ) annotations = namespace . get ( '__annotations__' , {}) namespace [ \"__slots__\" ] = tuple ( annotations . keys ()) # auto __slots__ return super () . __new__ ( mcs , name , bases , namespace , ** kwargs ) def __call__ ( cls , ** kwargs ): for field_name , field_type in cls . __annotations__ . items (): if field_name not in kwargs : raise ValueError ( f \"Missing field { field_name } \" ) else : assert isinstance ( kwargs [ field_name ], field_type ), f \"Field { field_name } must be of type { field_type } \" for field_name , field_value in kwargs . items (): if field_name not in cls . __annotations__ : raise ValueError ( f \"Unknown field { field_name } \" ) return super () . __call__ ( ** kwargs ) class BaseModel ( metaclass = Meta ): def __init__ ( self , ** kwargs ): for field_name , field_value in kwargs . items (): setattr ( self , field_name , field_value ) class Account ( BaseModel ): first_name : str last_name : str username : str account = Account ( first_name = \"Hakan\" , last_name = \"\u00c7elik\" , username = \"hakancelik\" ) assert account . __slots__ == ( \"first_name\" , \"last_name\" , \"username\" ) assert account . __dict__ == {} assert account . first_name == \"Hakan\" assert account . last_name == \"\u00c7elik\" assert account . username == \"hakancelik\" # Account(first_name=\"Hakan\", last_name=\"\u00c7elik\", username=1)","title":"Modeling a class with a metaclass"},{"location":"tutorial/examples/register-classes-in-python/","text":"class Meta ( type ): _names = [] def __new__ ( mcs , name , bases , namespace , ** kwargs ): obj = super () . __new__ ( mcs , name , bases , namespace ) if not [ b for b in bases if isinstance ( b , mcs )]: # mcs is a Base return obj mcs . _names . append ( name ) return obj class Base ( metaclass = Meta ): pass class Example ( Base ): pass class Example2 ( Base ): pass assert Example . _names == [ \"Example\" , \"Example2\" ] assert Example2 . _names == [ \"Example\" , \"Example2\" ] # ------- class Base : _names = [] def __init_subclass__ ( cls , ** kwargs ): super () . __init_subclass__ ( ** kwargs ) cls . _names . append ( cls . __name__ ) class Example ( Base ): pass class Example2 ( Base ): pass assert Example . _names == [ \"Example\" , \"Example2\" ] assert Example2 . _names == [ \"Example\" , \"Example2\" ] # ------- def decorator ( cls ): if hasattr ( cls , \"_names\" ): cls . _names . append ( cls . __name__ ) else : cls . _names = [] return cls @decorator class Base : pass @decorator class Example ( Base ): pass @decorator class Example2 ( Base ): pass assert Example . _names == [ \"Example\" , \"Example2\" ] assert Example2 . _names == [ \"Example\" , \"Example2\" ]","title":"Register classes in python"},{"location":"tutorial/examples/singleton-in-python/","text":"class Meta ( type ): instance = {} def __call__ ( cls , * args , ** kwargs ): if cls not in cls . instance : cls . instance [ cls ] = super () . __call__ ( * args , ** kwargs ) return cls . instance [ cls ] class Singleton ( metaclass = Meta ): pass class Example ( Singleton ): pass class Example2 ( Singleton ): pass assert Example is not Example2 assert Singleton is not Example assert Singleton is not Example2 assert Singleton () is Singleton () assert Example () is Example () assert Example2 () is Example2 () assert Example () is not Example2 () # -------- class Meta ( type ): instance = {} def __new__ ( mcs , * args , ** kwargs ): if not hasattr ( mcs , 'obj' ): mcs . obj = super () . __new__ ( mcs , * args , ** kwargs ) return mcs . obj def __call__ ( cls , * args , ** kwargs ): if cls not in cls . instance : cls . instance [ cls ] = super () . __call__ ( * args , ** kwargs ) return cls . instance [ cls ] class Singleton ( metaclass = Meta ): pass class Example ( Singleton ): pass class Example2 ( Singleton ): pass assert Example is Example2 assert Singleton is Example assert Singleton is Example2 assert Singleton () is Singleton () assert Example () is Example () assert Example2 () is Example2 () assert Example () is Example2 ()","title":"Singleton in python"}],"index":{"fieldVectors":[["title/",[0,3.629]],["text/",[1,0.048,2,0.366,3,2.022,4,1.064,5,0.371,6,1.75,7,1.721,8,2.239,9,2.298,10,2.298,11,1.158,12,1.75,13,2.022,14,2.022,15,0.553,16,2.298,17,0.132,18,0.508,19,2.022,20,1.739,21,1.739,22,2.022,23,2.022,24,0.499,25,2.022,26,2.022,27,1.739,28,1.512,29,2.673,30,2.574,31,3.557,32,3.557,33,1.512,34,2.402,35,2.402,36,2.994,37,2.402,38,2.402,39,2.402,40,2.402,41,2.402,42,2.402,43,2.402,44,3.175,45,2.402,46,2.402,47,2.402,48,2.402,49,2.402,50,2.402,51,2.402,52,2.402,53,3.175,54,3.175,55,3.175,56,2.402,57,2.402,58,3.175,59,3.175,60,2.402,61,2.402,62,2.402,63,2.402,64,2.402,65,2.402]],["title/#metaclasses",[1,0.033]],["text/#metaclasses",[1,0.043,3,2.671,4,1.042,5,0.379,6,2.084,7,1.83,8,2.544,9,2.738,10,2.738,11,1.232,12,2.084,13,2.671,14,2.671,15,0.658,16,2.738,17,0.132]],["title/#examples",[18,0.418]],["text/#examples",[1,0.035,2,0.369,4,0.906,5,0.329,11,1.003,17,0.129,18,0.53,19,2.594,20,2.23,21,2.23,22,2.594,23,2.594,24,0.64,25,2.594,26,2.594,27,2.23,28,1.94,29,2.594,30,2.889,31,3.991,32,3.991,33,1.94,34,3.081,35,3.081,36,3.129,37,3.081,38,3.081,39,3.081,40,3.081]],["title/#tutorial-docs-videos",[41,2.128,42,2.128,43,2.128]],["text/#tutorial-docs-videos",[1,0.048,4,1.056,5,0.279,7,1.525,44,3.768,45,3.152,46,3.152,47,3.152,48,3.152,49,3.152,50,3.152,51,3.152,52,3.152,53,3.768,54,3.768,55,3.768,56,3.152,57,3.152,58,3.768,59,3.768,60,3.152,61,3.152,62,3.152]],["title/#cpython-implementation",[29,2.075,63,2.464]],["text/#cpython-implementation",[36,2.998,64,3.562,65,3.562]],["title/tutorial/dynamic-class-creation/",[5,0.189,6,1.173,7,1.03]],["text/tutorial/dynamic-class-creation/",[2,0.395,5,0.326,6,1.42,11,1.342,17,0.128,18,0.618,24,0.69,66,3.195,67,3.195,68,3.195,69,3.195,70,3.195,71,3.195,72,2.663,73,1.564,74,0.448,75,0.81,76,0.448,77,1.413,78,0.94,79,2.576,80,1.371,81,1.564,82,1.865,83,1.239,84,1.608]],["title/tutorial/invisible-metaclasses-in-python/",[1,0.024,4,0.519,14,1.792]],["text/tutorial/invisible-metaclasses-in-python/",[1,0.044,2,0.384,5,0.374,17,0.134,18,0.548,85,3.554,86,1.194]],["title/tutorial/meta-classes-without-type/",[5,0.166,15,0.326,16,1.356,17,0.065]],["text/tutorial/meta-classes-without-type/",[1,0.022,2,0.396,5,0.286,12,1.354,15,0.759,17,0.069,18,0.56,24,0.579,33,1.25,73,1.185,74,0.485,75,0.877,76,0.528,78,1.062,80,1.039,81,1.185,85,2.554,86,0.562,87,1.562,88,1.986,89,1.562,90,1.562,91,2.348,92,0.793,93,1.559,94,0.74,95,2.714,96,0.912,97,1.061,98,3.034,99,0.793,100,2.789,101,2.838,102,2.462,103,1.986,104,3.047,105,2.196,106,3.047,107,1.596,108,1.044,109,1.372,110,2.457,111,0.844,112,1.562,113,2.789,114,2.789,115,1.986,116,1.562,117,3.223,118,2.462,119,1.817,120,2.462,121,1.781,122,2.462,123,2.462,124,2.462,125,2.462,126,2.462,127,1.986,128,2.789,129,1.986,130,1.437,131,1.437,132,1.094,133,1.986,134,1.672,135,1.26,136,1.986,137,1.986,138,1.26,139,1.562,140,1.061]],["title/tutorial/metaclasses-in-python/",[1,0.028,4,0.601]],["text/tutorial/metaclasses-in-python/",[1,0.028,2,0.395,5,0.362,7,1.201,11,1.248,15,0.71,17,0.126,18,0.608,72,2.349,73,1.379,74,0.432,75,0.605,76,0.432,80,1.483,81,1.69,82,2.617,83,1.347,84,1.749,86,0.703,101,2.349,141,3.079,142,3.079,143,3.079,144,3.079,145,3.079]],["title/tutorial/more-accurate-dynamic-class-creation/",[5,0.148,6,0.921,7,0.809,8,1.053,9,1.21]],["text/tutorial/more-accurate-dynamic-class-creation/",[2,0.395,5,0.312,6,1.301,7,1.142,11,1.31,17,0.136,18,0.608,24,0.732,30,1.709,72,2.552,73,1.597,74,0.546,75,0.765,76,0.546,77,1.499,78,0.998,79,2.361,80,1.314,81,1.499,82,1.709,83,1.17,84,1.519,93,1.142,96,1.709,99,1.486,146,2.927,147,3.892,148,2.927,149,2.927,150,3.892,151,2.927,152,2.927,153,2.927,154,2.927,155,2.927]],["title/tutorial/more-accurate-meta-classes-without-type/",[5,0.134,8,0.951,9,1.093,15,0.263,16,1.093,17,0.053]],["text/tutorial/more-accurate-meta-classes-without-type/",[1,0.016,2,0.396,5,0.194,15,0.462,24,0.85,28,0.897,33,0.897,73,0.928,74,0.731,75,1.087,76,0.707,77,1.71,78,0.959,80,0.531,86,0.403,93,0.689,99,0.897,105,2.156,107,1.266,108,1.266,109,1.484,119,1.441,121,1.285,132,1.945,156,2.555,157,3.694,158,1.425,159,2.709,160,2.709,161,2.709,162,3.694,163,2.709,164,1.767,165,2.709,166,2.709,167,2.508,168,2.709,169,1.767,170,2.454,171,1.199,172,1.767,173,1.767,174,1.767,175,1.767,176,1.767,177,2.185,178,1.767,179,1.767,180,1.767,181,1.767,182,4.204,183,1.767]],["title/tutorial/run-methods-order-in-python-with-more-explanation/",[4,0.368,8,0.951,10,1.093,11,0.492,12,0.832,13,1.272]],["text/tutorial/run-methods-order-in-python-with-more-explanation/",[1,0.013,2,0.397,5,0.21,15,0.655,17,0.041,18,0.589,24,0.653,33,1.49,73,1.148,74,0.574,75,0.861,76,0.513,78,1.119,80,1.229,81,1.402,85,1.002,86,0.337,91,1.597,92,0.749,93,1.306,94,1.1,95,2.972,96,0.861,97,1.002,98,2.7,100,1.897,101,2.675,103,2.366,105,1.955,107,1.599,108,1.402,109,1.459,110,3.144,111,1.254,113,1.897,114,1.897,115,1.19,117,2.7,119,1.788,121,1.596,127,1.897,128,2.366,129,1.19,130,0.861,131,0.861,132,1.818,133,2.366,134,1.992,135,1.897,136,1.19,137,1.19,138,1.19,140,2.484,184,2.934,185,2.353,186,2.353,187,2.934,188,1.475,189,1.475,190,2.7,191,2.353,192,1.475,193,1.475,194,1.475,195,1.475,196,1.475]],["title/tutorial/run-methods-order-in-python/",[4,0.457,10,1.356,11,0.61,12,1.032]],["text/tutorial/run-methods-order-in-python/",[1,0.022,2,0.395,5,0.282,12,1.071,15,0.714,17,0.068,18,0.568,24,0.719,74,0.693,75,0.67,76,0.603,78,1.174,80,1.453,81,1.612,86,0.55,92,1.224,93,1.675,94,1.188,95,3.282,96,1.407,97,1.637,107,1.692,108,1.472,109,1.484,111,1.553,119,1.886,121,1.886,132,1.908,197,2.411,198,2.411,199,2.411,200,2.411]],["title/tutorial/understanding-python-classes/",[3,1.792,4,0.519,5,0.189]],["text/tutorial/understanding-python-classes/",[2,0.396,4,0.562,5,0.354,11,1.006,17,0.151,18,0.592,72,1.668,73,0.979,74,0.401,75,0.562,76,0.401,80,1.546,81,1.762,82,2.235,83,1.151,84,1.494,101,1.668,105,1.668,130,1.668,156,1.668,201,2.857,202,2.857,203,2.857,204,2.857,205,2.857,206,1.668,207,2.857,208,2.304,209,2.857,210,2.304]],["title/tutorial/examples/auto-slots/",[21,1.784,22,2.075]],["text/tutorial/examples/auto-slots/",[1,0.028,2,0.395,5,0.318,15,0.559,17,0.085,18,0.512,24,0.822,73,1.039,74,0.559,75,0.929,76,0.426,77,1.365,78,0.909,83,1.197,86,0.692,94,1.197,107,1.365,109,1.197,111,1.039,119,1.843,130,1.77,131,1.77,206,1.77,211,4.141,212,3.032,213,3.032,214,3.984,215,3.958,216,4.908,217,4.449,218,2.445]],["title/tutorial/examples/define-method-if-condition-true/",[11,0.61,26,1.577,27,1.356,28,1.179]],["text/tutorial/examples/define-method-if-condition-true/",[1,0.027,2,0.396,5,0.303,17,0.147,18,0.346,24,0.664,27,2.809,28,2.013,30,1.757,74,0.675,75,0.902,76,0.644,77,0.696,78,0.464,83,0.905,84,0.793,86,0.464,91,1.38,92,1.821,93,0.793,94,0.905,99,1.528,108,1.359,109,1.078,111,1.52,119,1.175,121,1.175,131,1.186,132,1.338,158,2.428,167,2.874,170,2.315,171,2.874,206,1.186,210,1.639,219,3.011,220,2.032,221,3.965,222,4.234,223,4.234,224,3.011,225,3.011,226,3.965,227,3.965,228,4.234,229,2.032,230,2.032,231,4.712,232,2.032,233,2.032,234,3.011,235,3.011,236,1.639,237,2.032,238,3.011,239,2.032,240,2.032,241,3.011,242,2.892]],["title/tutorial/examples/logging-namespace/",[23,2.075,24,0.512]],["text/tutorial/examples/logging-namespace/",[1,0.031,2,0.393,5,0.338,15,0.607,17,0.097,74,0.663,75,0.929,76,0.483,77,1.18,78,0.786,80,1.035,86,0.786,92,1.749,93,1.344,94,1.035,99,2.195,134,2.936,140,2.339,167,3.209,170,2.759,171,2.936,242,3.487,243,4.324,244,3.444,245,4.324,246,3.444,247,3.444,248,3.444,249,3.444]],["title/tutorial/examples/modeling-a-class-with-a-metaclass/",[1,0.024,5,0.189,25,1.792]],["text/tutorial/examples/modeling-a-class-with-a-metaclass/",[1,0.021,2,0.396,5,0.274,15,0.461,17,0.092,21,1.337,24,0.744,74,0.539,75,0.646,76,0.539,77,1.316,78,1.087,81,1.316,83,1.39,84,1.282,94,1.261,107,1.316,108,1.316,109,1.513,111,1.316,119,0.894,121,1.282,170,1.337,177,3.097,206,2.242,208,1.847,211,3.097,215,3.097,218,1.847,250,3.285,251,3.841,252,5.033,253,3.841,254,3.285,255,3.285,256,2.29,257,3.841,258,2.29,259,3.285,260,2.29,261,4.871,262,4.196,263,4.196,264,4.196,265,3.285,266,3.285,267,3.285,268,2.29,269,2.29,270,2.29]],["title/tutorial/examples/register-classes-in-python/",[4,0.519,5,0.189,19,1.792]],["text/tutorial/examples/register-classes-in-python/",[1,0.022,2,0.395,5,0.365,15,0.484,17,0.069,18,0.6,24,0.577,74,0.56,76,0.56,77,1.366,78,1.199,83,1.421,84,0.956,86,1.131,94,1.37,107,1.181,108,1.727,109,1.198,111,1.181,156,2.327,190,3.215,236,3.215,271,5.253,272,4.203,273,3.447,274,3.447,275,4.326,276,1.977]],["title/tutorial/examples/singleton-in-python/",[4,0.601,20,1.784]],["text/tutorial/examples/singleton-in-python/",[1,0.031,2,0.395,5,0.353,15,0.604,17,0.096,18,0.599,20,3.082,74,0.556,76,0.556,83,1.587,86,1.075,88,3.988,94,1.365,107,1.173,108,1.81,109,1.416,111,1.359,121,1.68,132,2.094,156,2.314,272,4.195,276,1.956]]],"fields":["title","text"],"invertedIndex":[["",{"_index":2,"text":{"":{},"#examples":{},"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/invisible-metaclasses-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["0x109203c10",{"_index":185,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["0x109203ca0",{"_index":186,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["0x109226a90",{"_index":189,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["0x10b2eea90",{"_index":196,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["0x10b3bea60",{"_index":106,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["0x10b3bea90",{"_index":125,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["0x10b3cab80",{"_index":118,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["0x10b3cac10",{"_index":120,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["0x10b3caca0",{"_index":122,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["0x10d4c3940",{"_index":137,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["0x10dd9e940",{"_index":192,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["1",{"_index":73,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["123",{"_index":248,"text":{"tutorial/examples/logging-namespace/":{}},"title":{}}],["2",{"_index":134,"text":{"tutorial/examples/logging-namespace/":{},"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["3",{"_index":33,"text":{"":{},"#examples":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["3115",{"_index":55,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["42",{"_index":246,"text":{"tutorial/examples/logging-namespace/":{}},"title":{}}],["44",{"_index":202,"text":{"tutorial/understanding-python-classes/":{}},"title":{}}],["__all__",{"_index":220,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["__annotations__",{"_index":251,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["__call__",{"_index":121,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["__call_run",{"_index":157,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__class__",{"_index":82,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["__classcell__",{"_index":123,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["__code__",{"_index":212,"text":{"tutorial/examples/auto-slots/":{}},"title":{}}],["__contains__",{"_index":176,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__delattr__",{"_index":168,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__delitem__",{"_index":172,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__dict__",{"_index":218,"text":{"tutorial/examples/auto-slots/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["__getattribute__",{"_index":165,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__getitem__",{"_index":169,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__init__",{"_index":119,"text":{"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["__init_subclass__",{"_index":273,"text":{"tutorial/examples/register-classes-in-python/":{}},"title":{}}],["__int__",{"_index":249,"text":{"tutorial/examples/logging-namespace/":{}},"title":{}}],["__iter__",{"_index":178,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__len__",{"_index":174,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__main__",{"_index":101,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["__name__",{"_index":274,"text":{"tutorial/examples/register-classes-in-python/":{}},"title":{}}],["__new__",{"_index":107,"text":{"tutorial/examples/auto-slots/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["__prepare__",{"_index":93,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["__prepare__(mc",{"_index":197,"text":{"tutorial/run-methods-order-in-python/":{}},"title":{}}],["__qualname__",{"_index":114,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["__repr__",{"_index":164,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__reversed__",{"_index":180,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__setattr__",{"_index":166,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__setitem__",{"_index":171,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["__slots__",{"_index":211,"text":{"tutorial/examples/auto-slots/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["__str__",{"_index":162,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["_name",{"_index":271,"text":{"tutorial/examples/register-classes-in-python/":{}},"title":{}}],["a=1",{"_index":193,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["abc",{"_index":32,"text":{"":{},"#examples":{}},"title":{}}],["account",{"_index":261,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["account(first_name=\"hakan",{"_index":268,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["accur",{"_index":9,"text":{"":{},"#metaclasses":{}},"title":{"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{}}}],["add",{"_index":142,"text":{"tutorial/metaclasses-in-python/":{}},"title":{}}],["annot",{"_index":250,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["anoth",{"_index":146,"text":{"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["append",{"_index":236,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/register-classes-in-python/":{}},"title":{}}],["arg",{"_index":132,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["args=(1",{"_index":133,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["assert",{"_index":83,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["attr",{"_index":72,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["auto",{"_index":21,"text":{"":{},"#examples":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{"tutorial/examples/auto-slots/":{}}}],["autoslot",{"_index":214,"text":{"tutorial/examples/auto-slots/":{}},"title":{}}],["b",{"_index":190,"text":{"tutorial/examples/register-classes-in-python/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["b=2",{"_index":194,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["bar",{"_index":247,"text":{"tutorial/examples/logging-namespace/":{}},"title":{}}],["base",{"_index":78,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["basemodel",{"_index":259,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["bases=(<__main__",{"_index":104,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["bases=(<class",{"_index":184,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["bodi",{"_index":150,"text":{"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["bool",{"_index":228,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["c",{"_index":140,"text":{"tutorial/examples/logging-namespace/":{},"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["c#l89",{"_index":65,"text":{"":{},"#cpython-implementation":{}},"title":{}}],["c=3",{"_index":195,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["call",{"_index":187,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["call=<__main__",{"_index":136,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["callabl",{"_index":223,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["cell",{"_index":124,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["cl",{"_index":108,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["class",{"_index":5,"text":{"":{},"#examples":{},"#metaclasses":{},"#tutorial-docs-videos":{},"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/invisible-metaclasses-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{},"tutorial/understanding-python-classes/":{}},"title":{"tutorial/dynamic-class-creation/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/understanding-python-classes/":{}}}],["classmethod",{"_index":92,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["cls=<class",{"_index":128,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["cls_call",{"_index":161,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["cls_init",{"_index":160,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["cls_name",{"_index":95,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["cls_name='exampl",{"_index":103,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["cls_name='k",{"_index":102,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["cls_name=='exampl",{"_index":116,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["cls_name=='k",{"_index":112,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["cls_new",{"_index":159,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["co_nam",{"_index":213,"text":{"tutorial/examples/auto-slots/":{}},"title":{}}],["com/django/django/blob/main/django/db/models/bas",{"_index":37,"text":{"":{},"#examples":{}},"title":{}}],["com/pydantic/pydantic/blob/main/pydantic/main",{"_index":39,"text":{"":{},"#examples":{}},"title":{}}],["com/python",{"_index":48,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["com/python/cpython/blob/main/python/bltinmodul",{"_index":64,"text":{"":{},"#cpython-implementation":{}},"title":{}}],["com/questions/100003/what",{"_index":57,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["com/watch?v=ywzmiaqnpki",{"_index":46,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["condit",{"_index":27,"text":{"":{},"#examples":{},"tutorial/examples/define-method-if-condition-true/":{}},"title":{"tutorial/examples/define-method-if-condition-true/":{}}}],["constant",{"_index":217,"text":{"tutorial/examples/auto-slots/":{}},"title":{}}],["contain",{"_index":89,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["cpython",{"_index":29,"text":{"":{},"#examples":{}},"title":{"#cpython-implementation":{}}}],["creat",{"_index":67,"text":{"tutorial/dynamic-class-creation/":{}},"title":{}}],["creation",{"_index":7,"text":{"":{},"#metaclasses":{},"#tutorial-docs-videos":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{"tutorial/dynamic-class-creation/":{},"tutorial/more-accurate-dynamic-class-creation/":{}}}],["d",{"_index":244,"text":{"tutorial/examples/logging-namespace/":{}},"title":{}}],["decor",{"_index":275,"text":{"tutorial/examples/register-classes-in-python/":{}},"title":{}}],["dedent",{"_index":151,"text":{"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["def",{"_index":74,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["default",{"_index":96,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["defin",{"_index":26,"text":{"":{},"#examples":{}},"title":{"tutorial/examples/define-method-if-condition-true/":{}}}],["define_if",{"_index":231,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["defineif",{"_index":241,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["definemeta",{"_index":221,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["del",{"_index":173,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["denem",{"_index":183,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["dev/blog/2020/12/07/python",{"_index":59,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["dict",{"_index":99,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["doc",{"_index":42,"text":{"":{}},"title":{"#tutorial-docs-videos":{}}}],["doesn't",{"_index":198,"text":{"tutorial/run-methods-order-in-python/":{}},"title":{}}],["dynam",{"_index":6,"text":{"":{},"#metaclasses":{},"tutorial/dynamic-class-creation/":{},"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{"tutorial/dynamic-class-creation/":{},"tutorial/more-accurate-dynamic-class-creation/":{}}}],["e501",{"_index":240,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["elik",{"_index":266,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["empti",{"_index":126,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["enum",{"_index":31,"text":{"":{},"#examples":{}},"title":{}}],["even",{"_index":66,"text":{"tutorial/dynamic-class-creation/":{}},"title":{}}],["exampl",{"_index":18,"text":{"":{},"#examples":{},"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/invisible-metaclasses-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{},"tutorial/understanding-python-classes/":{}},"title":{"#examples":{}}}],["example2",{"_index":272,"text":{"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{}},"title":{}}],["exec",{"_index":153,"text":{"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["explan",{"_index":13,"text":{"":{},"#metaclasses":{}},"title":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}}}],["f",{"_index":81,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["fals",{"_index":158,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["field",{"_index":215,"text":{"tutorial/examples/auto-slots/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["field_nam",{"_index":252,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["field_typ",{"_index":253,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["field_valu",{"_index":257,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["first_nam",{"_index":262,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["foo",{"_index":242,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{}},"title":{}}],["format",{"_index":163,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["func",{"_index":235,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["funct",{"_index":222,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["function",{"_index":117,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["global",{"_index":154,"text":{"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["hakan",{"_index":265,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["hakancelik",{"_index":267,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["hasattr",{"_index":276,"text":{"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{}},"title":{}}],["hello",{"_index":204,"text":{"tutorial/understanding-python-classes/":{}},"title":{}}],["html#custom",{"_index":52,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["https://blog",{"_index":60,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["https://doc",{"_index":50,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["https://github",{"_index":36,"text":{"":{},"#cpython-implementation":{},"#examples":{}},"title":{}}],["https://jfreeman",{"_index":58,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["https://pep",{"_index":53,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["https://realpython",{"_index":47,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["https://stackoverflow",{"_index":56,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["https://www",{"_index":44,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["ignor",{"_index":155,"text":{"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["ignore[overrid",{"_index":239,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["implement",{"_index":63,"text":{"":{}},"title":{"#cpython-implementation":{}}}],["import",{"_index":30,"text":{"":{},"#examples":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["inherit",{"_index":139,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["init",{"_index":127,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["init=non",{"_index":129,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["inspect",{"_index":219,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["instanc",{"_index":88,"text":{"tutorial/examples/singleton-in-python/":{},"tutorial/meta-classes-without-type/":{}},"title":{}}],["int",{"_index":130,"text":{"tutorial/examples/auto-slots/":{},"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["intermedi",{"_index":143,"text":{"tutorial/metaclasses-in-python/":{}},"title":{}}],["invis",{"_index":14,"text":{"":{},"#metaclasses":{}},"title":{"tutorial/invisible-metaclasses-in-python/":{}}}],["ionelmc",{"_index":61,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["isfunct",{"_index":232,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["isinst",{"_index":84,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["item",{"_index":177,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["iter",{"_index":179,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["k",{"_index":85,"text":{"tutorial/invisible-metaclasses-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["key",{"_index":170,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["keyword_field",{"_index":216,"text":{"tutorial/examples/auto-slots/":{}},"title":{}}],["klass",{"_index":182,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["kwarg",{"_index":109,"text":{"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["kwargs={'c",{"_index":135,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["kwargs={'k",{"_index":138,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["lambda",{"_index":79,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["last_nam",{"_index":263,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["last_name=\"\u00e7elik",{"_index":269,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["layer",{"_index":144,"text":{"tutorial/metaclasses-in-python/":{}},"title":{}}],["len",{"_index":175,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["let\u2019",{"_index":141,"text":{"tutorial/metaclasses-in-python/":{}},"title":{}}],["lib",{"_index":35,"text":{"":{},"#examples":{}},"title":{}}],["list",{"_index":210,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["log",{"_index":23,"text":{"":{},"#examples":{}},"title":{"tutorial/examples/logging-namespace/":{}}}],["loggingdict",{"_index":243,"text":{"tutorial/examples/logging-namespace/":{}},"title":{}}],["mc",{"_index":94,"text":{"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["mcs=<class",{"_index":100,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["meta",{"_index":15,"text":{"":{},"#metaclasses":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-meta-classes-without-type/":{}}}],["metaclass",{"_index":1,"text":{"":{},"#examples":{},"#metaclasses":{},"#tutorial-docs-videos":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/invisible-metaclasses-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{"#metaclasses":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/invisible-metaclasses-in-python/":{},"tutorial/metaclasses-in-python/":{}}}],["method",{"_index":11,"text":{"":{},"#examples":{},"#metaclasses":{},"tutorial/dynamic-class-creation/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/understanding-python-classes/":{}},"title":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}}}],["method(self",{"_index":152,"text":{"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["miss",{"_index":256,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["model",{"_index":25,"text":{"":{},"#examples":{}},"title":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}}}],["more",{"_index":8,"text":{"":{},"#metaclasses":{}},"title":{"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}}}],["name",{"_index":77,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["namespac",{"_index":24,"text":{"":{},"#examples":{},"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{"tutorial/examples/logging-namespace/":{}}}],["namespace={'__module__",{"_index":113,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["namespace[\"attr",{"_index":148,"text":{"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["namespace[\"method",{"_index":149,"text":{"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["new",{"_index":110,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["new=<__main__",{"_index":188,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["new=<class",{"_index":115,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["none",{"_index":131,"text":{"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["noqa",{"_index":91,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["normal",{"_index":87,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["notset",{"_index":226,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["obj",{"_index":156,"text":{"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["object",{"_index":105,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["order",{"_index":12,"text":{"":{},"#metaclasses":{},"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python/":{}},"title":{"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}}}],["org/3/reference/datamodel",{"_index":51,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["org/doc/essays/metaclass",{"_index":49,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["org/pep",{"_index":54,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["overview",{"_index":0,"text":{},"title":{"":{}}}],["parti",{"_index":34,"text":{"":{},"#examples":{}},"title":{}}],["pass",{"_index":86,"text":{"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/invisible-metaclasses-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["phase",{"_index":145,"text":{"tutorial/metaclasses-in-python/":{}},"title":{}}],["pop",{"_index":233,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["post",{"_index":71,"text":{"tutorial/dynamic-class-creation/":{}},"title":{}}],["prepar",{"_index":98,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["previou",{"_index":70,"text":{"tutorial/dynamic-class-creation/":{}},"title":{}}],["print",{"_index":80,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/examples/logging-namespace/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["properti",{"_index":90,"text":{"tutorial/meta-classes-without-type/":{}},"title":{}}],["public",{"_index":225,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["py#l47",{"_index":40,"text":{"":{},"#examples":{}},"title":{}}],["py#l92",{"_index":38,"text":{"":{},"#examples":{}},"title":{}}],["python",{"_index":4,"text":{"":{},"#examples":{},"#metaclasses":{},"#tutorial-docs-videos":{},"tutorial/understanding-python-classes/":{}},"title":{"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/invisible-metaclasses-in-python/":{},"tutorial/metaclasses-in-python/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{},"tutorial/understanding-python-classes/":{}}}],["r",{"_index":245,"text":{"tutorial/examples/logging-namespace/":{}},"title":{}}],["rais",{"_index":254,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["regist",{"_index":19,"text":{"":{},"#examples":{}},"title":{"tutorial/examples/register-classes-in-python/":{}}}],["renam",{"_index":230,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["result",{"_index":68,"text":{"tutorial/dynamic-class-creation/":{}},"title":{}}],["return",{"_index":76,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["revers",{"_index":181,"text":{"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["ro/2015/02/09/understand",{"_index":62,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}],["run",{"_index":10,"text":{"":{},"#metaclasses":{}},"title":{"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}}}],["same",{"_index":69,"text":{"tutorial/dynamic-class-creation/":{}},"title":{}}],["self",{"_index":75,"text":{"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/more-accurate-meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["self=<__main__",{"_index":191,"text":{"tutorial/run-methods-order-in-python-with-more-explanation/":{}},"title":{}}],["setattr",{"_index":260,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["singleton",{"_index":20,"text":{"":{},"#examples":{},"tutorial/examples/singleton-in-python/":{}},"title":{"tutorial/examples/singleton-in-python/":{}}}],["slot",{"_index":22,"text":{"":{},"#examples":{}},"title":{"tutorial/examples/auto-slots/":{}}}],["staticmethod",{"_index":97,"text":{"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["str",{"_index":206,"text":{"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["super",{"_index":111,"text":{"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{}},"title":{}}],["test",{"_index":227,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["textwrap",{"_index":147,"text":{"tutorial/more-accurate-dynamic-class-creation/":{}},"title":{}}],["todo",{"_index":229,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["true",{"_index":28,"text":{"":{},"#examples":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{"tutorial/examples/define-method-if-condition-true/":{}}}],["tupl",{"_index":208,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/understanding-python-classes/":{}},"title":{}}],["tutori",{"_index":41,"text":{"":{}},"title":{"#tutorial-docs-videos":{}}}],["type",{"_index":17,"text":{"":{},"#examples":{},"#metaclasses":{},"tutorial/dynamic-class-creation/":{},"tutorial/examples/auto-slots/":{},"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/examples/modeling-a-class-with-a-metaclass/":{},"tutorial/examples/register-classes-in-python/":{},"tutorial/examples/singleton-in-python/":{},"tutorial/invisible-metaclasses-in-python/":{},"tutorial/meta-classes-without-type/":{},"tutorial/metaclasses-in-python/":{},"tutorial/more-accurate-dynamic-class-creation/":{},"tutorial/run-methods-order-in-python-with-more-explanation/":{},"tutorial/run-methods-order-in-python/":{},"tutorial/understanding-python-classes/":{}},"title":{"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-meta-classes-without-type/":{}}}],["type('hello')=<class",{"_index":205,"text":{"tutorial/understanding-python-classes/":{}},"title":{}}],["type(())=<class",{"_index":207,"text":{"tutorial/understanding-python-classes/":{}},"title":{}}],["type(44)=<class",{"_index":203,"text":{"tutorial/understanding-python-classes/":{}},"title":{}}],["type([])=<class",{"_index":209,"text":{"tutorial/understanding-python-classes/":{}},"title":{}}],["type(obj",{"_index":201,"text":{"tutorial/understanding-python-classes/":{}},"title":{}}],["type_check",{"_index":237,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["understand",{"_index":3,"text":{"":{},"#metaclasses":{}},"title":{"tutorial/understanding-python-classes/":{}}}],["unexport",{"_index":224,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["union",{"_index":238,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["unknown",{"_index":258,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["usernam",{"_index":264,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["username=1",{"_index":270,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["valu",{"_index":167,"text":{"tutorial/examples/define-method-if-condition-true/":{},"tutorial/examples/logging-namespace/":{},"tutorial/more-accurate-meta-classes-without-type/":{}},"title":{}}],["valueerror",{"_index":255,"text":{"tutorial/examples/modeling-a-class-with-a-metaclass/":{}},"title":{}}],["video",{"_index":43,"text":{"":{}},"title":{"#tutorial-docs-videos":{}}}],["way",{"_index":200,"text":{"tutorial/run-methods-order-in-python/":{}},"title":{}}],["without",{"_index":16,"text":{"":{},"#metaclasses":{}},"title":{"tutorial/meta-classes-without-type/":{},"tutorial/more-accurate-meta-classes-without-type/":{}}}],["work",{"_index":199,"text":{"tutorial/run-methods-order-in-python/":{}},"title":{}}],["wrapper",{"_index":234,"text":{"tutorial/examples/define-method-if-condition-true/":{}},"title":{}}],["youtub",{"_index":45,"text":{"":{},"#tutorial-docs-videos":{}},"title":{}}]],"pipeline":["stemmer"],"version":"2.3.9"}}